DEV_ID,What is your goal when using Themis?,"On average, how many hours a week do you spend using Themis?",What information from the main dashboard do you consider useful? Please detail why.,What steps do you take based on the information from the main dashboard?,"On average, how many times a week do you use the suggestion view?","In the suggestions view, do you use the list or the treemap?","Explain why you do no use one, why you use the other, or why you use both",How do you think your score correlate with the technical debt that you add and remove?,Explain why,What is for you the importance of your score in Themis? (not important 1-7 essential),Explain why,What steps do you take to improve your score in Themis?,What part of your score is the most important to you? (a high amount of positive points 1 - 7 a low amount of negative points),Explain why,"Did you notice a change in your motivation to reduce technical debt since the introduction of Themis? If yes, what was that change?",How do you think your managers use the information provided by Themis?,How do you feel about the fact that managers can monitor your actions with Themis?,What instructions did you receive from your managers regarding the use of Themis?,Do you agree with the fact that the actions of other developers are anonymized? (completely disagree 1 � 7 completely agree),Explain why,How often do you think your score should be reset?,Explain why,Do you think that the participation of developers to the leaderboard should be optional? Explain why.,"Do you think Themis had an impact on the technical debt of your project? If yes, what was this impact (positive or negative)?",What are the main challenges you experienced while using Themis?,"Before using themis, how did you manage the technical debt of your project?","Did the introduction of themis affect other parts of your work? If yes, please describe which ones and how",Please describe any modification of themis that you would like to see,do you agree to participate to an eventual interview?,Do you agree to answer additional questions via email,Do you want to receive the results of the study and information about its potential publication
1,I use it to fix some debt and to clean my code in case I forget to do it.,2.5,"First, the 'leaderboard', to see what my position is. Then the 'main actions report' to see what are my areas of improvement. Especially negative actions. Then the 'current goals' to see how to quickly progress in the leaderboard.",The information alert me on precise points I need to monitor for my personal progress,2,Mainly the treemap,I have all the information I need in the treemap view,Don't know,I did not test the new updates enough on that aspect,5,To be able to taunt my colleagues,Fixing debt,5,I mostly look to improve myself and having less negative points go towards that.,I am more attentive to the debt. To go back up in the rankings I think right away about reducing the debt.,I think that they use it to check if there is a slackening in the quality of the produced code. Nothing more.,"I do not mind. The more people look at my code the better, because someone could give me comments and I could improve myself.",To run properly the quality measurement tool before submitting the code.,4,I don’t see the point but why not,Each version,To have a ranking for each version,I do not think participation to the leaderboard should be optional. The developer already has the choice not to pay attention to the leaderboard. Moreover for me the leaderboard is the most motivating thing to reduce the debt,Themis had a positive impact on our project. It allows to put our debt in a constant decrease process and thus to reach the end one day.,none,SONAR directly,"The usage of quality measurement tools is systematic, which was not really the case before.",It would be nice to have a chart showing the overall TD and its evolution,Yes,Yes,Yes
2,"To have continuous improvement, but also to generate code correction initiatives (using gamification and points)",Around 10 minutes at the start of each day,The news feed and the leaderboard because these information are enough to complete the aforementioned goals,"Fixing defects from the day before, or looking for corrective actions to make to progress in the leaderboard.",1.5,Both,I use both without any preference for one or the other,Strongly correlated,The score is directly computed from tools managing technical debt,5,The score is another tool to motivate initiatives inside the team,a small debt fixing campaign once in a while in addition to a day-to-day attention,5,The goal is for me to learn from your mistakes before fixing existing debt.,personal initiatives of debt fixing,"No idea, I am not sure that they already use it.",I would say that it depends of the manager. However I am relatively serene as our manager is not someone that would punish mistakes but tends to pull us up.,To play the game,7,We are not here to judge our colleagues,Each month,"Too large points gaps between developers can be relatively disheartening, even leading to the abandon of the use of Themis","No, you need to involve everyone","Yes, a positive impact",the challenge came from the time to configure themis and of the large variation of points induced by updates.,via sonar only,A specific attention every day before commiting code,"I don’t have any demand right now, We’ll see with more hindsight",Yes,Yes,Yes
3,"For the anomalies added the day before (it is replacing Sonar), and to look for files containing several anomalies to be fixed.",1,"The ‘news feed’ to see the debt creation, the current goals if I have the time for a mass fixing activity to reduce the debt.",I fix the debt created the day before,0,Mainly the treemap,I did not use the suggestion tool in a while. At the time the list did not exist,Strongly correlated,"Since we have a ranking per sprint, the score accurately represents the positive actions that I am doing.",1,"Since the beginning, I don’t really like the idea of a leaderboard. Some need this to motivate themselves to make fixes, but I think this is a pity that you need to have a reward (points) to code properly, or to be at the bottom of the leaderboard (visible by all) to fix the sonar anomalies created the day before.","None, I rarely have the time to do mass fixing of sonar anomalies (other than the ones I created the day before), so my score is what it is",7,"You need to code cleanly on the first try. Having negative points means that you committed source code that is not clean, that you did not seek to run the analysis tools on your local environment, in short, that you did not work properly.",No,No idea,"I don’t have anything to hide, when I make a mistake, I take responsibility for it. And often I don’t have anything to be blamed for.","At first, we had to test the tool. Now that it is stable (from our point of view), we seek to complete objectives, [… removed to preserve anonymity]",7,"I do not care about the actions of others. I only care about my own mistakes. And anyway, we can see the Sonar report, so you see what is added by other and you see when it is fixed.",Each sprint,"Some negative points are not fixed because we decide not to fix them. So if we do not reset the points and thus the ranking, we will never move in the ranking, which basically means that it is useless","Yes, if a developer do not care about the ranking and gamification, he could choose not to take part in the leaderboard.","Yes, positive, some seek to be on the top of the leaderboard.",none,By looking at Sonar reports every morning and by fixing anomalies from the day before.,No,no idea,No,No,No
4,To improve the produced code,1,The news feed and the leaderboard in order to improve my own code in priority,It consists in fixing the added defects,1,Mainly the treemap,The treemap allows to see the indebted files easier,Strongly correlated,"Each time a negative action is done, points are removed, so it has to be related.",5,The playful aspect of the score allows an emulation between developers,"It goes though fixing debt, but also being more attentive every day to avoid having negative points.",6,"Having a high quantity of positive points means that you spend a lot of time fixing defect, which is not my goal. However, not having negative points is important, it means that the code is of a certain quality.",Yes. It involves fixing classes in which I work in order to have some positive points and also to have a visual evolution of the treemap which gives an overview of the debt. The visual effect plays a real role.,It allows them to see if the team is involved in the quality of the produced code.,"That is a good thing, it allows to suggest action plans in order to have individual improvement.",To use Themis and not hesitate to give feedback on bugs/improvement suggestions.,4,"On one hand it allows a developer who has some difficulties to avoid being pointed at all the time. However, some developers who are not making efforts would actually deserve being pointed at to make them react.",Each sprint,"It works with development phases, it seems sound to me that this score also works with phases. Moreover, the team is not stable, and developers come and leave. A newcomer wouldn’t have the same basis of points than an ancient. A regular reset following development phases seems entirely appropriate to me.","Participation to the leaderboard should indeed be optional in order to avoid frustrating some people that may be less performing. It should be however in agreement with the manager, in order to spotlight unwilling people in the leaderboard.","Yes it had a positive impact on technical debt, developers feel more involved, and the gamification system has something to do with it.","The challenge is to find the way to use it that is efficient for us. Some favor suggestions, other the action plans. But it is by using it that we find what works for us.","Debt was not really managed before themis. Sonar was used to avoid adding debt, but very little to fix it.",No,"Goals are not clearly written when they are displayed, and if the title is not clear. It could be good to really see the goal, with a form like “Not having more than 3 negative actions on the rule: NameOfTheRule” for example",No,Yes,Yes
5,"Debt decrease, complement of Sonar.",3,"'Current goals’ puts an accent on the defect to kill first
'Leaderboard’ the playful game that allows to figure out who will bring chocolate croissants at the end of the sprint.
'Main actions report’ Detailed but concise view of the realized actions.",Target the type of defect to fix first,0,Mainly the treemap,More readable graphical display,Moderately correlated,"You make a mistake and you are punished, so in that sense the score is highly correlated to technical debt. However, while using it we found that when two people work successively on a file, all the points are attributed to the person who last edited the file. If the first person violates 200 rules, negative points are assigned to the second person. In that way the score does not always reflect the actions of a developer.",5,"That it is positive is a good thing, but having the best score is not my aim",use of more quality measurement tools before code commits and fixing technical debt defect based on the established action plans.,7,"You can have 0 point and be a developer applying the ‘clean code’ rules by the book, not generating any defect. And that is the goal to reach because ultimately there must not be any technical debt.","Yes, the introduction of the leaderboard and particularly of the penalties.",Code activity and developer involvement,No specific feeling,To use it as much as possible,2,"You always know who does what especially when those are mistakes, so why not displaying it directly, this way you also retain the developer’s positive actions.",Each sprint,Allows to challenge developers regularly and prevent them to be discouraged by the points gap.,NA,"Yes, as a tool to quantify and prioritize the work to be done on technical debt",The first version was not adapted to the enterprise environment,Sonar,"Cited earlier, using more quality measurement tools before the commit",See exchanges of mail with the Themis team,No,No,No
6,"To have access to the technical defects I add because of my development.
To have access to suggestions of technical defects to fix to improve the project’s code quality.
To have access to a history of my actions to evaluate the way I work.",1,"My news feed. Two reasons: first, it rapidly indicates me what I have regarding positive or negative actions. I can then evaluate my work very quickly. Then, and it is a feeling, it indirectly gives me an indication to know when the last “Themis” analysis was performed. It is completely false because the new feed does not reflect neutral actions, but this is a (bad) habit that I took.
Leaderboard: to see where I am compared to others
Current goals: To have an idea of the current orientation of the debt management, see where we are in our goals, see if a goal was successful or not.","News feed: If created anomalies, I seek to fix them as quickly as possible
Current goals: I follow the evolution of action plans that are directly assigned to me, then the ones for the team. If I have time, I seek to complete an action plan asking to 'make positive actions'
Leaderboard: If I see that my rank got lower, I try to understand why. Instinctively, I am going to think that it is because I created debt, and not because my colleagues realized corrective tasks. I then peek at the news feed again to have the detail.
Actions report: Currently, it does not generate any action for me, so I look at it either last, or not at all",2,Mainly the list,"The list system gives me files grouped by defects. If I want to start a corrective task for a specific type of defect (this is how I work because I do not like to disperse), then this view meets this need the fastest. I can have a file to fix in 2 clics (selection of the rule, selection of the file)
The treemap system, while not unusable, has more constraints to it. Firstly because it makes me browse through packages and I do not like that. I would rather select a rule (something which makes sense as soon as you read it), than browsing through a tree structure where I can get lost quickly and not know what I was looking for in the first place. Actually, when I go in the suggestions view, it is precisely because I want to say to Themis: 'I have no idea of what to fix, give me something quick'. With the treemap, I feel like I can’t have this behavior, while I have it with the list.",Moderately correlated,"I think that the computation of the score is good. In a very large majority of cases, it will indeed detect what I added or fixed. There are however some settings, already communicated to Promyze, where you can be considered as creator of defects that were already in the file. Personally I do not take it into account because I know how to quickly identify this type of situation. However it can be a bit frustrating, because although I know if I really added a defect or not, my colleagues, seeing my ranking evolve, will not know it on the first glance.",6,"It allows me to evaluate my work on a given period, if I was beneficial or not to my project. Also, it allows me to position myself relatively to my colleagues. Not with the goal to show that I am better than them, but to see if I am as good as them. It goes hand in hand with the fact that, when I see my ranking decreasing, I systematically think that it is because I did not work properly (and not that my colleagues fixed something)","Firstly: avoid to add defects! I use the quality measurement tools available to me before committing my code.
Secondly: fix the content of a file that I have to modify for my development. NB: It is not Themis which recommended this file to me (but my development needs), and it is not Themis which pointed me to the existing defects in this file (but the quality measurement tools in my IDE)
Thirdly (but applied very little by me): make use of the action plans/goals",5,"I favor a low amount of negative points because it is to me the most important part and on the long term the goal of Themis: not creating any defect. However, for the time being, the amount of defect is such high that you also need to promote corrective activities. So it its almost 50/50 for me
","Yes.
With the suggestions engine, a quick access to files ready to be fixed.
With my news feed, I could see very quickly what I was doing right of wrong and what I had to fix. I would also take that opportunity to fix other defects in the file.","Regarding technical debt, they suggest action plans and goals regarding debt fixing/non-creation of debt.
Regarding developers behavior, no idea, I don’t have any feedback on this","I don’t have any problem with that, as long as the detection system is foolproof and does not wrongly assigns creation/deletion of debt to me.","To use is as much as possible, to test the system, make suggestions, be active and communicate with Promyze",7,"If Jacques adds a BLOCKING defect, the problem in not that Jacques did it but that the defect should not be created. In that kind of situation, as soon as someone sees the defect, they share it out loud in the office to ask the (anonymous) person responsible for it to repay it.",Each sprint,"Having the score matching our sprints allows to include Themis a little more in our agile processes. It is then possible to imagine at the end of a sprint retrospective review, to show a podium of the top developers. It is just an idea but it gives Themis a more important part in our work.","Hard to say. On one hand I would think that it is too bad because for me the goal of the leaderboard is to bring a playful aspect to debt fixing, and above all to give an information to the developer (comparison to others). But on the other hand, I imagine that on some projects where conflicts might exist, it could bring additional stress and harm the implantation of the tool in the team’s practices. In that kind of situation, I would say that yes, you can make the participation to the ranking optional. I would however strongly promote the participation of the whole team to the ranking.","We have a better consideration of our actions and of the debt we create. There are less defects created because it is visible by others through the leaderboard, so we are more careful.","Some annoying bugs that might have disrupted my colleagues and I: non-detection of fixed, wrong assignment of defects, anything that actually disrupted everyone’s score.
",,"I almost do not look at sonar to manage debt, only themis.","The ability to ask an expert developer to be unassigned to a defect if you did not create it. You should not allow the developer to do this, but you really need an external validator",Yes,Yes,Yes
7,defect monitoring,0.5,'News feed’ because there is the monitoring of new additions/fixes,"If I have defects additions, I fix them if possible",0,Both,Making mass TD repayment actions is absolutely not a part of my work. It is uninteresting and there is some development that is way more important that needs to be done.,Slightly correlated,"The project history lead to incorrect scores. Simple example: some files are from 2009, but taken into account only since 2014 by Themis. So if a modification without any defect is created, the developer takes all the defects that were here prior to his modification.",1,"Inexact score and there is not really much point in having it. Some people spend time fixing classes that are historically not modified only to win a few points, while they have pending development/debug…",No particular step,7,At least you do not create defects…,no,No idea,i don't care,To try to use it,3,i don't care,Each version,Allows to have scores on a complete version,no idea,"No: actions to reduce debt were already performed before. There haven’t been an increase in actions since.
Positive impact: We dont need to tell someone to fix their defects, they can see them themselves.
Negative impact: time wasting by some by fixing useless classes to go back up in the ranking. Wrongly made refactoring to ‘fix’ defects of npath/cycle/boolean complexity",none,"With Sonar, which is still used.",No,no idea,No,No,No
8,To improve my code quality,1,"The news feed because it allows me to quickly see if we added debt. The leaderboard and goals are also useful and it is important to be able to see them through the dashboard. However, I do not use the main actions report.",Fixing the created debt,As soon as I have time to work on the existing debt (at least once a week),Mainly the treemap,I can locate myself in the project more easily with the treemap.,Moderately correlated,"The added or deleted debt is taken into account correctly. However, in some cases, the existing debt is attributed to us and we lose points.",4,"The score is important for older projects with an important debt in order to create a competition and push developers to fix that debt. However it can be less interesting on a new project, since a clean code will not generate any points.",Complete goals and fix existing debt when I modify a file.,7,Producing a clean code is the first step to be able to reduce technical debt.,"Yes, in order to have a better score",No idea,I do not mind,NA,4,It is always possible to retrieve the actions trough other ways,Each sprint,"We are developing following sprints (3 weeks), it is then important to have a score linked to this development period.",Yes if they did not produce code in the current sprint,"Yes, positive, less debt created and fixed as soon as possible.",none,"With Sonar, we already tried not to add debt.",No,Being able to remove developers from the leaderboard based on whether they develop or not on the sprint,No,No,No
